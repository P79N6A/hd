<?php
Input::init(Request::getPost(), $model);
?>
<div class="form page-quick-sidebar-form">
    <!-- BEGIN FORM-->
    <form method="post" class="form-horizontal form-bordered form-label-stripped form-mediapublish" enctype="multipart/form-data">
        <div class="page-quick-sidebar-title">
            <span class="page-quick-sidebar-titleinfo font-blue"><i class="fa fa-info"></i>栏目绑定</span>
            <div class="btn-group">
                <button type="submit" class="btn blue"><i class="fa fa-check"></i> 提交</button>
            </div>
        </div>
        <div class="form-body">
            <div class="form-group">
                <label class="control-label col-md-2">栏目名称</label>
                <div class="col-md-10">
                    <input disabled="true" type="text" placeholder="栏目名称" maxlength="50" class="form-control maxlength-handler" value="<?= Input::fetch('name');?>" name="title" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">绑定栏目</label>
                <div class="col-md-10">
                    <?php
                    $this->partial('partials/categorybind', [
                        'id' => 'category_bind',
                        'name' => 'category_bind',
                        'data' => $categoryData,
                        'multiple'=>true,
                    ]);
                    ?>
                </div>
            </div>
        </div>
    </form>
</div>
<script type="text/javascript">
    // form stations
    $('.form-mediapublish').validate({
        errorElement: 'span', //default input error message container
        errorClass: 'help-block', // default input error message class
        focusInvalid: true, // do not focus the last invalid input
        rules: {
            media_publish: {
                required: true,
            }
        },

        messages: {
            media_publish: {
                required: '发布栏目不能为空'
            }
        },

        invalidHandler: function(event, validator) {
            //$('.alert-danger', $('.login-form')).show();
        },

        highlight: function(element) { // hightlight error inputs
            $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
        },

        success: function(label) {
            label.closest('.form-group').removeClass('has-error');
            label.remove();
        },

        errorPlacement: function(error, element) {
            error.insertAfter(element.closest('.validate-box'));
        },

        submitHandler: function(form) {
            form.submit(); // form validation success, call ajax form submit
        }

    });

    $("#media_publish").change(function() {
        $(this).valid();
    });
</script>
